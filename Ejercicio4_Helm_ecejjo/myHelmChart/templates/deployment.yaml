---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: 1g-volume
spec:
  storageClassName: ejercicio4-scn
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-1g
spec:
  storageClassName: ejercicio4-scn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javierjimenezolivares-db-deployment
  labels:
    app: javierjimenezolivares-db
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: db
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: {{ .Values.db.image}}
        ports:
        - containerPort: 3306
          name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: {{ .Values.common.password}}
          - name: MYSQL_DATABASE
            value: {{ .Values.common.database}}
        volumeMounts:
          - mountPath: "/var/lib/mysql"
            name: db-volume
      volumes:
        - name: db-volume
          persistentVolumeClaim:
            claimName: pvc-1g
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
  - port: 3306
  selector:
    app: db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javierjimenezolivares-app-deployment
  labels:
    app: javierjimenezolivares-db
spec:
  selector:
    matchLabels:
      app: javierjimenezolivares-db
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: javierjimenezolivares-db
      labels:
        app: javierjimenezolivares-db
    spec:
      containers:
      - name: java
        image: {{ .Values.app.image}}
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: {{ .Values.common.password}}
          - name: MYSQL_DATABASE
            value: {{ .Values.common.database}}
---
apiVersion: v1
kind: Service
metadata:
  name: javierjimenezolivares-db-service
  labels:
    app: javierjimenezolivares-db
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: javierjimenezolivares-db
  selector:
    app: javierjimenezolivares-db
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress  
metadata:  
  name: ecejjo-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # nginx.ingress.kubernetes.io/use-regex: true
spec:  
  rules:
  - host: {{ .Values.ingress.host}}
    http:
      paths:
      - path: /anuncios(/|$)(.*)
        backend:
          serviceName: javierjimenezolivares-db-service
          servicePort: 8080
      - path: /anuncio(/|$)(.*)
        backend:
          serviceName: javierjimenezolivares-db-service
          servicePort: 8080
      - path: /nuevoAnuncio.html
        backend:
          serviceName: javierjimenezolivares-db-service
          servicePort: 8080
